import Header from "components/header";
import Hero from "components/hero";
import { hygraph } from "config/hygraph.config";
import { gql } from "graphql-request";
import type { NextPage } from "next";
import Head from "next/head";

interface IAuthor {
  id: string;
  name: string;
  email: string;
  phone: string;
  intro: string;
  bio: string;
  profession: string;
  picture: {
    url: string;
  };
}
interface ISocials {
  facebookUrl: string;
  twitterUrl: string;
}
interface ISkill {
  id: string;
  title: string;
}

export interface IUser {
  author: IAuthor;
  socials: ISocials;
  skills: ISkill[];
}

interface Props {
  user: IUser;
}

const Home: NextPage<Props> = ({ user }) => {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <Hero user={user} />
    </>
  );
};

// from: https://hygraph.com/

const QUERY = gql`
  {
    socials {
      facebookUrl
      twitterUrl
    }
    author(where: { slug: "md-eahea-ratan" }) {
      id
      name
      email
      phone
      intro
      bio
      profession
      picture {
        url
      }
    }
    skills {
      id
      title
    }
  }
`;

export async function getStaticProps() {
  try {
    const { author, socials, skills } = await hygraph.request(QUERY);

    return {
      props: {
        user: {
          author,
          socials,
          skills,
        },
      },
    };
  } catch (error) {
    return { props: null, error: error };
  }
}

export default Home;
